{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Template to launch other child stacks for which in general create the entire dspace infrastracture",
    "Metadata": {
        "AWS::CloudFormation::Interface": {
            "ParameterGroups": [
                {
                    "Label": {
                        "default": "Dspace Accounts Configuration"
                    },
                    "Parameters": [
                        "NumberofAccounts",
                        "AccountsPerServer"
                    ]
                },
                {
                    "Label": {
                        "default": "EC2 Configuration"
                    },
                    "Parameters": [
                        "InstanceType",
                        "InstanceProfile"
                    ]
                },
                {
                    "Label": {
                        "default": "Security Configuration"
                    },
                    "Parameters": [
                        "KeyName",
                        "SSHLocation"
                    ]
                },
                {
                    "Label": {
                        "default": "Database Configuration"
                    },
                    "Parameters": [
                        "MasterUsername",
                        "MasterUserPassword",
                        "BackupRetentionPeriod",
                        "MultiAvailabilityZone",
                        "TcpPort",
                        "PreferredBackupWindow",
                        "PreferredMaintenanceWindow",
                        "AllocatedStorage",
                        "ConfigureProvisionedIops",
                        "SnapshotOnDelete",
                        "AutoMinorVersionUpgrade",
                        "ProvisionedIopsValue",
                        "DatabaseClass"
                    ]
                }
            ],
            "ParameterLabels": {
                "NumberofAccounts": {
                    "default": "Enter initial number of accounts/customers"
                },
                "AccountsPerServer": {
                    "default": "Enter the desired number of dspace accounts in one server"
                },
                "InstanceType": {
                    "default": "Instance type to be launched"
                },
                "InstanceProfile": {
                    "default": "The IAM role to be used by instances"
                },
                "KeyName": {
                    "default": "Keypair to access the instances"
                },
                "SSHLocation": {
                    "default": "IP Address range to SSH to the instances"
                },
                "MasterUsername": {
                    "default": "Primary username of the database user"
                },
                "MasterUserPassword": {
                    "default": "Primary password for database user"
                },
                "BackupRetentionPeriod": {
                    "default": "Backup retention period in days"
                },
                "MultiAvailabilityZone": {
                    "default": "Enable Multi Availability Zone?"
                },
                "TcpPort": {
                    "default": "The port to connect to the database"
                }
            }
        },
        "AWS::CloudFormation::Designer": {
            "b3304d38-421d-4ca3-b753-7c728684dad7": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 470,
                    "y": 60
                },
                "z": 0,
                "embeds": []
            },
            "be6e4c23-3347-4adf-bf94-b6537ab85fc6": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 590,
                    "y": 60
                },
                "z": 0,
                "embeds": []
            },
            "d4920985-63ae-46bb-ae0f-5603667fa47d": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 730,
                    "y": 60
                },
                "z": 0,
                "embeds": []
            }
        }
    },
    "Parameters": {
        "InstanceType": {
            "Description": "WebServer EC2 instance type",
            "Type": "String",
            "Default": "t2.xlarge",
            "AllowedValues": [
                "t1.micro",
                "t2.nano",
                "t2.micro",
                "t2.small",
                "t2.medium",
                "t2.large",
                "t2.xlarge",
                "t2.2xlarge",
                "m1.small",
                "m1.medium",
                "m1.large",
                "m1.xlarge",
                "m2.xlarge",
                "m2.2xlarge",
                "m2.4xlarge",
                "m3.medium",
                "m3.large",
                "m3.xlarge",
                "m3.2xlarge",
                "m4.large",
                "m4.xlarge",
                "m4.2xlarge",
                "m4.4xlarge",
                "m4.10xlarge",
                "c1.medium",
                "c1.xlarge",
                "c3.large",
                "c3.xlarge",
                "c3.2xlarge",
                "c3.4xlarge",
                "c3.8xlarge",
                "c4.large",
                "c4.xlarge",
                "c4.2xlarge",
                "c4.4xlarge",
                "c4.8xlarge",
                "g2.2xlarge",
                "g2.8xlarge",
                "r3.large",
                "r3.xlarge",
                "r3.2xlarge",
                "r3.4xlarge",
                "r3.8xlarge",
                "i2.xlarge",
                "i2.2xlarge",
                "i2.4xlarge",
                "i2.8xlarge",
                "d2.xlarge",
                "d2.2xlarge",
                "d2.4xlarge",
                "d2.8xlarge",
                "hi1.4xlarge",
                "hs1.8xlarge",
                "cr1.8xlarge",
                "cc2.8xlarge",
                "cg1.4xlarge"
            ],
            "ConstraintDescription": "must be a valid EC2 instance type."
        },
        "NumberofAccounts": {
            "Description": "Enter the initial number of customers or initial number of Accounts in Multiples of 5",
            "Type": "Number",
            "ConstraintDescription": "Must be a number which is a multiple of 5."
        },
        "AccountsPerServer": {
            "Description": "The required number of dspace accounts per instance",
            "Type": "Number",
            "Default": "5",
            "ConstraintDescription": "Must be a number with digits 0-9."
        },
        "OperatorEMail": {
            "Description": "EMail address to notify if there are any scaling operations",
            "Type": "String",
            "AllowedPattern": "([a-zA-Z0-9_\\-\\.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([a-zA-Z0-9\\-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?)",
            "ConstraintDescription": "must be a valid email address."
        },
        "InstanceProfile": {
            "Description": "The IAM Instance Profile to use",
            "Type": "String",
            "Default": "puppet-serverless-s3",
            "ConstraintDescription": "must be the name of an Instance Profile."
        },
        "InstancestoLauch": {
            "Description": "Choose number of instances that will be launched.",
            "Type": "Number",
            "Default": "1",
            "ConstraintDescription": "Must be a number with digits between 0 and 9"
        },
        "DspaceHostedZone": {
            "Description": "Chose an existing Hostname",
            "Type": "String",
            "Default": "dddke.net"
        },
        "ALBRoute53DNSName": {
            "Description": "DNS name for the ELB to be added in Route53. The final end endpoint for the ELB will be <ELBDNSName>.<AWS-Region>.<Environment>.<ELBHostedZone> .",
            "Type": "String",
            "Default": "dspacestaging"
        },
        "KeyName": {
            "Description": "The EC2 Key Pair to allow SSH access to the instances",
            "Type": "AWS::EC2::KeyPair::KeyName",
            "ConstraintDescription": "must be the name of an existing EC2 KeyPair."
        },
        "SSHLocation": {
            "Description": "The IP address range that can be used to SSH to the EC2 instances",
            "Type": "String",
            "MinLength": "9",
            "MaxLength": "18",
            "Default": "0.0.0.0/0",
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
            "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
        },
        "MasterUsername": {
            "Description": "Database administration name. First character must be a letter and can not be 'root'.",
            "Type": "String",
            "Default": "dspace"
        },
        "MasterUserPassword": {
            "NoEcho": "true",
            "Description": "Database administration password. Minimum of 8 alphanumeric characters (pattern of [a-zA-Z0-9]).",
            "Type": "String",
            "MinLength": "8",
            "AllowedPattern": "[a-zA-Z0-9!?]*",
            "ConstraintDescription": "Must only contain upper and lowercase letters and numbers"
        },
        "BackupRetentionPeriod": {
            "Description": "Enter Backup Retention Period in Days.",
            "Type": "Number",
            "Default": "7"
        },
        "MultiAvailabilityZone": {
            "Description": "Enable Multi Availability Zones?",
            "Type": "String",
            "Default": "false",
            "AllowedValues": [
                "true",
                "false"
            ]
        },
        "TcpPort": {
            "Description": "Enter RDS Listening TCP Port number.",
            "Type": "Number",
            "Default": "5432"
        },
        "PreferredBackupWindow": {
            "Description": "Enter Preferred Backup Window Time (UTC).",
            "Type": "String",
            "Default": "17:00-19:00"
        },
        "PreferredMaintenanceWindow": {
            "Description": "Enter Preferred Maintenance Window Time (UTC).",
            "Type": "String",
            "Default": "Sun:19:00-Sun:23:00"
        },
        "AllocatedStorage": {
            "Default": "10",
            "Description": "The size of the database (Gb)",
            "Type": "Number",
            "MinValue": "10",
            "MaxValue": "6144",
            "ConstraintDescription": "Must be between 10-6144"
        },
        "ConfigureProvisionedIops": {
            "Description": "Configure Route 53 DNS Alias for RDS? Be sure a matching record doesn't already exist.",
            "Type": "String",
            "Default": "false",
            "AllowedValues": [
                "true",
                "false"
            ]
        },
        "SnapshotOnDelete": {
            "Description": "Create a Snapshot on Delete?",
            "Type": "String",
            "Default": "true",
            "AllowedValues": [
                "true",
                "false"
            ]
        },
        "AutoMinorVersionUpgrade": {
            "Description": "Allow Automatic Minor Version Upgrades?",
            "Type": "String",
            "Default": "true",
            "AllowedValues": [
                "true",
                "false"
            ]
        },
        "ProvisionedIopsValue": {
            "Description": "(Skip if Not Using Provisioned IOPS) Set Provisioned IOPS 1000-30000.",
            "Type": "Number",
            "Default": "1000",
            "MinValue": "1000",
            "MaxValue": "30000"
        },
        "DatabaseClass": {
            "Description": "Select Instance Type.",
            "Type": "String",
            "Default": "db.r4.large",
            "AllowedValues": [
                "db.t1.micro",
                "db.t2.micro",
                "db.t2.small",
                "db.t2.medium",
                "db.t2.large",
                "db.m1.small",
                "db.m1.medium",
                "db.m1.large",
                "db.m1.xlarge",
                "db.m3.medium",
                "db.m3.large",
                "db.m3.xlarge",
                "db.m3.2xlarge",
                "db.m4.large",
                "db.m4.xlarge",
                "db.m4.2xlarge",
                "db.m4.4xlarge",
                "db.m4.10xlarge",
                "db.r3.large",
                "db.r3.xlarge",
                "db.r3.2xlarge",
                "db.r3.4xlarge",
                "db.r3.8xlarge",
                "db.r4.large",
                "db.r4.xlarge"
            ],
            "ConstraintDescription": "Must be a valid EC2 instance type."
        }
    },
    "Resources": {
        "VPCStack": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "VPC Stack"
                    }
                ],
                "TemplateURL": "https://s3-eu-west-1.amazonaws.com/puppet-serverless/NestedStacks2/networking.template",
                "Parameters": {
                    "NumberofAccounts": {
                        "Ref": "NumberofAccounts"
                    },
                    "AccountsPerServer": {
                        "Ref": "AccountsPerServer"
                    }
                }
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "b3304d38-421d-4ca3-b753-7c728684dad7"
                }
            }
        },
        "ALBStack": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "LoadBalancing Stack"
                    }
                ],
                "TemplateURL": "https://s3-eu-west-1.amazonaws.com/puppet-serverless/NestedStacks2/loadbalancing.template",
                "Parameters": {
                    "SSHLocation": {
                        "Ref": "SSHLocation"
                    },
                    "NumberofASGs": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.Result"
                        ]
                    },
                    "DspaceHostedZone": {
                        "Ref": "DspaceHostedZone"
                    },
                    "ALBRoute53DNSName": {
                        "Ref": "ALBRoute53DNSName"
                    },
                    "Subnet1": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.Subnet1Id"
                        ]
                    },
                    "Subnet2": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.Subnet2Id"
                        ]
                    },
                    "Subnet3": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.Subnet3Id"
                        ]
                    },
                    "VPC": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.VPC"
                        ]
                    },
                    "LoadBalancerSG": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.LoadBalancerSG"
                        ]
                    }
                }
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "be6e4c23-3347-4adf-bf94-b6537ab85fc6"
                }
            },
            "DependsOn": [
                "VPCStack"
            ]
        },
        "DBStack": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "Instances Stack"
                    }
                ],
                "TemplateURL": "https://s3-eu-west-1.amazonaws.com/puppet-serverless/NestedStacks2/instances.template",
                "Parameters": {
                    "SSHLocation": {
                        "Ref": "SSHLocation"
                    },
                    "DspaceHostedZone": {
                        "Ref": "DspaceHostedZone"
                    },
                    "ALBRoute53DNSName": {
                        "Ref": "ALBRoute53DNSName"
                    },
                    "OperatorEMail": {
                        "Ref": "OperatorEMail"
                    },
                    "InstanceProfile": {
                        "Ref": "InstanceProfile"
                    },
                    "InstanceType": {
                        "Ref": "InstanceType"
                    },
                    "KeyName": {
                        "Ref": "KeyName"
                    },
                    "Subnet1": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.Subnet1Id"
                        ]
                    },
                    "NumberofASGs": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.Result"
                        ]
                    },
                    "Subnet2": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.Subnet2Id"
                        ]
                    },
                    "Subnet3": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.Subnet3Id"
                        ]
                    },
                    "DBSubnet1": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.DBSubnet1Id"
                        ]
                    },
                    "DBSubnet2": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.DBSubnet2Id"
                        ]
                    },
                    "VPC": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.VPC"
                        ]
                    },
                    "TargetGroup1": {
                        "Fn::GetAtt": [
                            "ALBStack",
                            "Outputs.TargetGroup1"
                        ]
                    },
                    "TargetGroup2": {
                        "Fn::GetAtt": [
                            "ALBStack",
                            "Outputs.TargetGroup2"
                        ]
                    },
                    "TargetGroup3": {
                        "Fn::GetAtt": [
                            "ALBStack",
                            "Outputs.TargetGroup3"
                        ]
                    },
                    "TargetGroup4": {
                        "Fn::GetAtt": [
                            "ALBStack",
                            "Outputs.TargetGroup4"
                        ]
                    },
                    "TargetGroup5": {
                        "Fn::GetAtt": [
                            "ALBStack",
                            "Outputs.TargetGroup5"
                        ]
                    },
                    "TargetGroup6": {
                        "Fn::GetAtt": [
                            "ALBStack",
                            "Outputs.TargetGroup6"
                        ]
                    },
                    "InstanceSG": {
                        "Fn::GetAtt": [
                            "ALBStack",
                            "Outputs.InstanceSG"
                        ]
                    },
                    "MasterUsername": {
                        "Ref": "MasterUsername"
                    },
                    "MasterUserPassword": {
                        "Ref": "MasterUserPassword"
                    },
                    "BackupRetentionPeriod": {
                        "Ref": "BackupRetentionPeriod"
                    },
                    "MultiAvailabilityZone": {
                        "Ref": "MultiAvailabilityZone"
                    },
                    "TcpPort": {
                        "Ref": "TcpPort"
                    },
                    "PreferredBackupWindow": {
                        "Ref": "PreferredBackupWindow"
                    },
                    "PreferredMaintenanceWindow": {
                        "Ref": "PreferredMaintenanceWindow"
                    },
                    "AllocatedStorage": {
                        "Ref": "AllocatedStorage"
                    },
                    "ConfigureProvisionedIops": {
                        "Ref": "ConfigureProvisionedIops"
                    },
                    "SnapshotOnDelete": {
                        "Ref": "SnapshotOnDelete"
                    },
                    "AutoMinorVersionUpgrade": {
                        "Ref": "AutoMinorVersionUpgrade"
                    },
                    "ProvisionedIopsValue": {
                        "Ref": "ProvisionedIopsValue"
                    },
                    "DatabaseClass": {
                        "Ref": "DatabaseClass"
                    }
                }
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "d4920985-63ae-46bb-ae0f-5603667fa47d"
                }
            },
            "DependsOn": [
                "ALBStack"
            ]
        }
    }
}
